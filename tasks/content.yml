---
- name: Install requirements
  zypper:
    name: "{{ cefs_packages }}"
    state: present
  become: true
  when: setup_cefs or setup_defs

- name: Install errata-import
  block:
    - name: Create folder
      file:
        path: "{{ cefs_path }}"
        state: directory
    - name: Download errata-import
      get_url:
        url: https://github.com/stevemeier/cefs/raw/master/errata-import.pl
        dest: "{{ cefs_path }}/errata-import.pl"
        mode: "0755"
    - name: Install wrapper script
      template:
        src: errata-import.sh.j2
        dest: "{{ cefs_path }}/wrapper.sh"
        mode: "0755"
        owner: root
        group: root
  become: true
  when: setup_cefs or setup_defs

- name: Install CEFS cronjob
  cron:
    name: "Import CentOS errata"
    job: "{{ cefs_path }}/wrapper.sh cefs"
    user: root
    cron_file: "errata-cefs"
    special_time: daily
  become: true
  when: setup_cefs_cronjob

- name: Install DEFS cronjob
  cron:
    name: "Import Debian errata"
    job: "{{ cefs_path }}/wrapper.sh defs"
    user: root
    cron_file: "errata-defs"
    special_time: daily
  become: true
  when: setup_defs_cronjob

- name: Create software channels
  command: spacewalk-common-channels -u {{ org_login }} -p {{ org_password }} -a {{ item.arch }} {{ item.name }}
  loop: "{{ channels }}"
  register: create_result
  changed_when: '"already in use" not in create_result.stderr | lower'
  become: true
  when: channels|length > 0

- name: Get software channels
  command: spacecmd -q -u {{ org_login }} -p {{ org_password }} softwarechannel_list
  changed_when: false
  register: software_channels
  when: sync_channels

- name: Sync software channels
  command: spacewalk-repo-sync -c {{ item }}
  loop: "{{ software_channels.stdout.split('\n')  }}"
  become: true
  when: sync_channels

- name: Get bootstrap distributions
  command: mgr-create-bootstrap-repo -l
  changed_when: false
  register: bootstrap_distributions
  become: true
  when: bootstrap_repos

- name: Create bootstrap repositories
  command: "mgr-create-bootstrap-repo -f -c {{ item | regex_replace('^[0-9].', '') }}"
  loop: "{{ bootstrap_distributions.stdout.split('\n') }}"
  become: true
  when: bootstrap_repos
